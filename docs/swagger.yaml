basePath: /api/
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.ChangePasswordInput:
    properties:
      password:
        minLength: 4
        type: string
      password_confirm:
        type: string
    required:
    - password
    type: object
  models.EmailInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.ErrorDetailsResponse:
    properties:
      field:
        type: string
      message:
        type: string
      tag:
        type: string
    type: object
  models.LoginInput:
    properties:
      email:
        minLength: 4
        type: string
      password:
        minLength: 4
        type: string
    required:
    - email
    - password
    type: object
  models.OTPInput:
    properties:
      otp:
        maxLength: 6
        minLength: 6
        type: string
    required:
    - otp
    type: object
  models.Product:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      is_enable:
        type: boolean
      price:
        type: number
      title:
        minLength: 4
        type: string
      updatedAt:
        type: string
      userID:
        description: foreignkey User
        type: integer
    required:
    - price
    - title
    type: object
  models.RefreshTokenInput:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.RegisterInput:
    properties:
      email:
        minLength: 4
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 4
        type: string
      password_confirm:
        type: string
      phone:
        type: string
      username:
        minLength: 4
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    - username
    type: object
  models.ResponseError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.ResponseHTTP:
    properties:
      code:
        type: integer
      error:
        type: string
      errors:
        items:
          $ref: '#/definitions/models.ErrorDetailsResponse'
        type: array
      message:
        type: string
    type: object
  models.ResponseSuccess:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.Status:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    required:
    - name
    type: object
  models.Token:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_staff:
        type: boolean
      is_superuser:
        type: boolean
      last_login_at:
        type: string
      last_login_ip:
        type: string
      last_name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      updatedAt:
        type: string
      userProfile:
        $ref: '#/definitions/models.UserProfile'
      username:
        type: string
      verification_code:
        type: string
      verified:
        type: boolean
      verified_at:
        type: string
    type: object
  models.UserProfile:
    properties:
      birthday:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_phone_verified:
        type: boolean
      login_with_sosmed:
        type: boolean
      login_with_sosmed_at:
        type: string
      phone:
        type: string
      phone_verified_at:
        type: string
      phone_verified_otp:
        type: string
      photo:
        type: string
      role:
        type: string
      status:
        $ref: '#/definitions/models.Status'
      statusID:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
host: localhost:8000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /v1/accounts/change-password:
    post:
      consumes:
      - application/json
      description: Change your old password to new password
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: Change Password
      tags:
      - Accounts
  /v1/accounts/delete:
    delete:
      consumes:
      - application/json
      description: Delete your account
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OTPInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: Delete Account
      tags:
      - Accounts
    post:
      consumes:
      - application/json
      description: Request OTP for account deletion
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: Request Delete Account
      tags:
      - Accounts
  /v1/accounts/me:
    get:
      consumes:
      - application/json
      description: Get User Data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: GetMe
      tags:
      - Accounts
  /v1/accounts/photo:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: Change your photo profile
      parameters:
      - description: File to upload
        format: multipart/form-data
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: Upload Photo Profile
      tags:
      - Accounts
  /v1/accounts/update:
    put:
      consumes:
      - application/json
      - multipart/form-data
      description: Update your profile
      parameters:
      - in: formData
        name: birthday
        type: string
      - in: formData
        name: first_name
        required: true
        type: string
      - in: formData
        name: last_name
        required: true
        type: string
      - in: formData
        name: phone
        required: true
        type: string
      - description: File to upload
        format: multipart/form-data
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - Accounts
  /v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Request email with OTP for reset your password
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.EmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Forgot Password
      tags:
      - Auth
  /v1/auth/forgot-password-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP your reset password
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OTPInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Forgot Password OTP
      tags:
      - Auth
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Get your token
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Login
      tags:
      - Auth
  /v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Revoke your token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - Auth
  /v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh your access token
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Refresh Access Token
      tags:
      - Auth
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register new Account
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Register new Account
      tags:
      - Auth
  /v1/auth/request-verify-code:
    post:
      consumes:
      - application/json
      description: Request new Verification Code
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.EmailInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Request Verification Code
      tags:
      - Auth
  /v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Save your new password
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OTPInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Reset Password
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
